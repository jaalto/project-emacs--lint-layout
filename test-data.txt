// PHP test cases
// M-x my-php-layout-check-regexp-occur-main

# not allowed comment style

/**
 *  Reservation
 *
 *  Copyright information
 *
 *      Copyright Peter Pan
 *      Copyright (C) Peter Pan
 *      Copyright (C) Peter Pan, Another Person Here
 *      Copyright (C) 2008 Peter Pan
 *      Copyright (C) 2008 Peter Pan <firstname.lastname@example.com>
 *
 *  License
 *
 *      This file is part of Hotel Sunshine - program.
 *
 *      Hotel Sunshine is free software; you can redistribute it and/or
 *      modify it under the terms of the GNU General Public License as
 *      published by the Free Software Foundation; either version 2 of
 *      the License, or (at your option) any later version.
 *
 *      This program is distributed in the hope that it will be useful, but
 *      WITHOUT ANY WARRANTY; without even the implied warranty of
 *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *      General Public License for more details.
 *
 *      You should have received a copy of the GNU General Public License
 *      along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @package    hotelsunshine
 * @author     Henri Kontio
 * @copyright  2008 Henri Kontio
 * @license    GPL v2 or any later version
 * @version    2008-04-08
 */

date()

echo "asdads"
echo 'lasasd'
echo $sdfsdf
echo("asdasd")

@ereg(sadasd)


while(1)
while (1)
while ( 1)
while ( 1 )

$a= 1
$a =123
a || b

if (a = b)

$this->call (param)
$this->debugArray ($this->classId ...)

IF ()

// Extra space before closing ')'
call( ad );
call( more(ad ));
if ( ! @mysql_select_db(DBNAME, $this->conn) )
$this->conn = @mysql_connect(DBHOST, DBUSER, DBPASS);
if ( ! $this->conn )

function printFooter()

while ($month <= 12)
$this->assertTrue( $this->data->isEmpty(" ")      == true );
function applyTemplate ($filename, $vars = array())
elseif ( array_key_exists($field, $_POST) )


        print "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" .
        "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n" .
        "\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n" .
        "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n" .
        "<head>\n" .
        "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n" .
        "<meta name=\"description\" content=\"\" />\n" .
        "<meta name=\"keywords\" content=\"\" />\n" .
        "<meta name=\"author\" content=\"Foo bar\" />\n" .
        "<link href=\"\" rel=\"stylesheet\" type=\"text/css\" />\n" .
        "<title>Hotel Sunshine</title>\n" .
        "</head>\n" .
        "<body>\n" .
        "<div id=\"wrapper\">\n";


2008-04-03  Jari Aalto  <jari.aalto@tamk.fi>

	* doc (dir): New directory.

	* doc/dev:  (dir): New directory.

	* doc/dev: (dir):  New directory.

        * application/lib/.keep: (file) New file

        * application/data/.keep: (file) New file

        * application/conf/.keep: (file) New file



/**
 *  This program starts from here.
 *
 *  @access   public
 */
function main (asd)
{
    // Something
}

/**
 *  This program starts from here.
 *
 *  @param    none
 *  @access   public
 */
function main ()
{
    // Something
}


    $handle = dbOpen();
    $insertCustomerQuery =
    " INSERT INTO   customer              " .
    "              (firstName             " .
    "               , lastName            " .
    "               , address             " .
    "               , zip                 " .
    "               , city                " .
    "               , country             " .
    "               , phone               " .
    "               , email)              " .
    " VALUES         ('" . $firstName . "'" .
    "                , '" . $lastName . "'" .
    "                , '" . $address .  "'" .
    "                , '" . $zip . "'     " .
    "                , '" . $city . "'    " .
    "                , '" . $country . "' " .
    "                , '" . $phone . "'   " .
    "                , '" . $email . "')  ";

    $this_variable = "something";

// ## PHPDOC TESTS


/**
 * Include Data class.
 */
require_once dirname(__FILE__) . '/../class/data.php';


/**
 * Class for managing service requests.
 */
class ServiceRequest
{
    // Place holder
}

/**
 * Test invalid parameter for setCategoryId().
 *
 * @access public
 */
public function testSetInvalidCategoryIdString ()
{
    try
    {
        $this->task->setCategoryId('foobar');
    }
    catch (ParameterException $e)
    {
        return;
    }

    $this->fail('ParameterException not caught.');
}

// Error: @return token not found

/**
 * Test invalid parameter for setCategoryId().
 *
 * @access public
 */
public function testSetInvalidCategoryIdString ()
{
    try
    {
        $this->task->setCategoryId('foobar');
    }
    catch (ParameterException $e)
    {
        return (1);
    }

    $this->fail('ParameterException not caught.');
}

"string".$var   OR   $var."string"
[".get_object_vars($resultObject)."]"
print $user->getFirstName()." ".


class
class

if ( $query and mysql_result == false )
if ( value and $var )
if ( $TEST  and  realpath ($_SERVER["PHP_SELF"]) == __FILE__ )

// misspelled
else if (test)

if ( K&R ) {
  code
} elseif ( this ) {
  code
}
elseif ( this ) {
  code
}
elseif ( this )
{
  code
}

function def_inition ( param, param)
function def( param, param)
function def ( param, param)
function def (param, param )
function def ( )
